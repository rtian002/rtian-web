<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>.resize() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main"><article id="post-521" class="post-521 post type-post status-publish format-standard hentry category-browser-events category-10 category-143">
	<header class="entry-header">
		<h1 class="entry-title">.resize()</h1>
		<hr>
<div class="entry-meta">
			分类: <span class="category">
<a href="events.htm"  title="View all posts in Events">事件</a> &gt; 
<a href="browser-events.htm"  title="View all posts in Browser Events">浏览器事件</a></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->
	<div class="entry-content">
		<article id="resize1" class="entry method"><h2 class="section-title">
<span class="name">.resize( handler(eventObject) )</span><span class="returns">返回: 
<a href="Types.htm#jQuery" >jQuery</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong>为 JavaScript 的 "resize" 事件绑定一个处理函数，或者触发元素上的该事件。</p>
<ul class="signatures">
<li class="signature" id="resize-handlereventObject">
<h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.0.htm" >1.0</a></span>.resize( handler(eventObject) )</h4>
<ul><li>
<div><strong>handler(eventObject)</strong></div>
<div>类型: 
<a href="Types.htm#Function" >Function</a>()</div>
<div>每次事件触发时会执行的函数。</div>
</li></ul>
</li>
<li class="signature" id="resize-eventData-handlereventObject">
<h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.4.3.htm" >1.4.3</a></span>.resize(  [eventData ], handler(eventObject) )</h4>
<ul>
<li>
<div><strong>eventData</strong></div>
<div>类型: 
<a href="Types.htm#PlainObject" >PlainObject</a>
</div>
<div>一个对象，它包含的数据键值对映射将被传递给事件处理程序。</div>
</li>
<li>
<div><strong>handler(eventObject)</strong></div>
<div>类型: 
<a href="Types.htm#Function" >Function</a>()</div>
<div>每次事件触发时会执行的函数。</div>
</li>
</ul>
</li>
<li class="signature" id="resize">
<h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.0.htm" >1.0</a></span>.resize()</h4>
<ul><li><div class="null-signature">这个方法不接受任何参数。</div></li></ul>
</li>
</ul>
<div class="longdesc" id="entry-longdesc">
    <p>这个函数的前两个用法是 <code>.bind('resize', handler)</code> 的快捷方式，第3个不带参数的用法是 <code>.trigger('resize')</code> 的快捷方式。</p>
    <p>当浏览器window的尺寸改变时，<code>window</code>元素上绑定的<code>resize</code>事件将被触发：</p>
    <div class="syntaxhighlighter javascript nogutter">
	<table>
		<tbody>
			<tr>
				<td class="gutter">
						<div class="line n1">1</div>
						<div class="line n2">2</div>
						<div class="line n3">3</div>
				</td>
				<td class="code">
					<pre><div class="container"><div class="line"><code>$(window).resize(<span class="keyword">function</span>() {</code></div></div><div class="container"><div class="line"><code>  $(<span class="string">'#log'</span>).append(<span class="string">'&lt;div&gt;Handler for .resize() called.&lt;/div&gt;'</span>);</code></div></div><div class="container"><div class="line"><code>});</code></div></div></pre>
				</td>
			</tr>
		</tbody>
	</table>
</div>
    <p>现在，只要在浏览器窗口的大小改变时，根据不同的浏览器，该消息被追加到&lt;div id="log"&gt;一次或多次。</p>
    <p><code>resize</code> 事件处理中的代码，不应该依赖于事件被调用的次数。由于不同浏览器对该事件实现的方式不同，该事件被调用的时机也不同。例如，对于 Internet Explorer 或 基于 WebKit 的浏览器（例如，Safari 和 Chrome）而言，resize 事件在窗口改变的过程中，会被连续调用。在某些浏览器，如 Opera，该事件只在调整窗口大小操作结束时被调用。</p>
  </div>
    <h3>Additional Notes（其他注意事项）:</h3>
        <div class="longdesc">
            <ul>
                <li>
                    <code>.resize()</code>方法只是作为<code>.on( "resize", handler )</code>的一个速记写法，移除该事件可以使用<code>.off(
                    "resize"
                    )</code>。
                </li>
            </ul>
        </div>
<div class="jquery-api-top">
</div>
<section class="entry-examples" id="entry-examples"><header><h2 class="underline">例子:</h2></header><div class="entry-example" id="example-0">
<h4><span class="desc">当窗口大小改变时（或改变后），查看窗口的宽度：</span></h4>
<div class="syntaxhighlighter javascript ">
	<table>
		<tbody>
			<tr>
				<td class="gutter">
						<div class="line n1">1</div>
						<div class="line n2">2</div>
						<div class="line n3">3</div>
				</td>
				<td class="code">
					<pre><div class="container"><div class="line"><code>$(window).resize(<span class="keyword">function</span>() {</code></div></div><div class="container"><div class="line"><code>  $(<span class="string">'body'</span>).prepend(<span class="string">'&lt;div&gt;'</span> + $(window).width() + <span class="string">'&lt;/div&gt;'</span>);</code></div></div><div class="container"><div class="line"><code>});</code></div></div></pre>
				</td>
			</tr>
		</tbody>
	</table>
</div>
</div></section>
</div></article>	</div><!-- .entry-content -->
</article>        
</div>
  </div>
