<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>jQuery.parseJSON() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main">
 <article id="post-371" class="post-371 post type-post status-publish format-standard hentry category-utilities category-141">
  <header class="entry-header">
    <h1 class="entry-title">jQuery.parseJSON()</h1>
    <hr>
<div class="entry-meta">
      分类: <span class="category">
<a href="utilities.htm"  title="View all posts in Utilities">实用工具</a></span>   </div><!-- .entry-meta -->
      </header><!-- .entry-header -->
  <div class="entry-content">
    <article id="jQuery-parseJSON1" class="entry method"><h2 class="section-title">
<span class="name">jQuery.parseJSON( json )</span><span class="returns">返回: 
<a href="Types.htm#String" >String</a> or 
<a href="Types.htm#Number" >Number</a> or 
<a href="Types.htm#Object" >Object</a> or 
<a href="Types.htm#Array" >Array</a> or 
<a href="Types.htm#Boolean" >Boolean</a></span>
<span class="version-details">过时版本: 
<a href="3.0.htm" >3.0</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong>接受一个标准格式的 JSON 字符串，并返回解析后的 JavaScript 值。</p>
<ul class="signatures"><li class="signature" id="jQuery-parseJSON-json">
<h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.4.1.htm" >1.4.1</a></span>jQuery.parseJSON( json )</h4>
<ul><li>
<div><strong>json</strong></div>
<div>类型: 
<a href="Types.htm#String" >String</a>
</div>
<div>要解析的 JSON 字符串。</div>
</li></ul>
</li></ul>
<div class="longdesc" id="entry-longdesc">
    <p>传入格式有误的 JSON 字符串可能导致抛出异常。例如，下面这些无效的 JSON 字符串：</p>
    <ul>
               <li>
                  <code>{test: 1}</code> (test 没有使用双引号包裹).</li>
               <li>
                  <code>{'test': 1}</code> ('test' 用了单引号而不是双引号包裹).</li>
            </ul>
    <ul>
          <li>
    <code>"{test: 1}"</code> (test 没有使用双引号包裹).</li>
          <li>
    <code>"{'test': 1}"</code> ('test' 用了单引号而不是双引号包裹).</li>
          <li>
    <code>"'test'"</code> ('test' 用单引号代替双引号).</li>
          <li>
    <code>".1"</code> (number 必须以数字开头; <code>"0.1"</code> 将是有效的).</li>
          <li>
    <code>"undefined"</code> (<code>undefined</code> 不能表示一个 JSON 字符串; 然而<code>null</code>,可以).</li>
          <li>
    <code>"NaN"</code> (<code>NaN</code> 不能表示一个 JSON 字符串; 用<code>Infinity</code>直接表示无限也是不允许的).</li>
        </ul>
    <p>
    JSON标准不允许“控制字符”如制表符或换行符。比如<code>$.parseJSON('{"testing":"1\t2\n3"}')</code>，大多数实现中将抛出一个错误，因为JavaScript分析器直接转换字符串的制表符和换行符为文本的制表符和换行符;产生双反斜杠，例如<code>"1\\t2\\n3"</code>是预期的结果。这个问题往往在服务器端语言，如PHP，JSON注入到一个JavaScript文件时发生。</p>
    <p>如果浏览器实现了原生的 <code>JSON.parse</code>， jQuery 则会使用它来解析字符串。更多关于JSON格式的细节请参考 
<a href="http://json.org/">http://json.org/</a> 。</p>
    <p>在jQuery 1.9之前,如果传递给<code>$.parseJSON</code>一个空字符串，<code>null</code>, 或者 <code>undefined</code>,，将返回<code>null</code>，而不是抛出一个错误，即使这些都不是有效的JSON。</p>
<p>
jQuery 3.0开始，<code>$.parseJSON</code>已经过时（不建议使用）。要将字符串解析成JSON对象，请使用原生的<code>JSON.parse</code>方法来代替。</p>
  </div>
<div class="jquery-api-top">
</div>
<section class="entry-examples" id="entry-examples"><header><h2 class="underline">例子:</h2></header><div class="entry-example" id="example-0">
<h4><span class="desc">解析一个 JSON 字符串。</span></h4>
<div class="syntaxhighlighter javascript ">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="keyword">var</span> obj = jQuery.parseJSON(<span class="string">'{"name":"John"}'</span>);</code></div></div><div class="container"><div class="line"><code>alert( obj.name === <span class="string">"John"</span> );</code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
</div></section>
</div></article>  </div><!-- .entry-content -->
</article>       
</div>
  </div>
