<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>.selector | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main"><article id="post-533" class="post-533 post type-post status-publish format-standard hentry category-internals category-global-jquery-object-properties">
  <header class="entry-header">
    <h1 class="entry-title">.selector</h1>
    <hr>
<div class="entry-meta">
      分类: <span class="category">
<a href="internals.htm"  title="View all posts in Internals">内部函数</a></span><span class="category-divider"> | </span><span class="category">
<a href="properties.htm"  title="View all posts in Properties">特性</a> &gt; 
<a href="global-jquery-object-properties.htm"  title="View all posts in Properties of the Global jQuery Object">全局 jQuery 对象的属性</a></span>    </div><!-- .entry-meta -->
      </header><!-- .entry-header -->
  <div class="entry-content">
    <article id="selector1" class="entry property"><h2 class="section-title">
<span>selector</span><span class="returns">返回: 
<a href="Types.htm#String" >String</a></span><span class="version-details">版本 过时: 
<a href="1.7.htm" >1.7</a>, 移除: 
<a href="3.0.htm" >3.0</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong>返回传给jQuery()的原始选择器。</p>
<ul class="signatures"><li class="signature"><h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.3.htm" >1.3</a></span>selector</h4></li></ul>
<div class="longdesc" id="entry-longdesc">
    <p>
        <code>.selector</code>属性在jQuery 1.7中已经不赞成使用，
        并且只保留在jQuery Migrate plugin(迁移插件)中，用来支持<code>.live()</code>。
        在jQuery 1.9中已经被移除。
        该属性作为选择器，当被用于获得jQuery集合中当前包含的元素时，肯能是不可靠的，
        因为后来的遍历方法可能会改变集合。
        如果插件需要选择器字符串在插件内部中使用 ，那么可以它可以作为该方法的一个参数。
        例如，
        一个“foo”的插件可以写成
        <code>$.fn.foo = function( selector, options ) { /* plugin code goes here */ };</code> ，
        使用插件的人需要将 <code>"div.bar"</code> 选择器作为<code>.foo()</code>的第一个参数，
        写成
        <code>$( "div.bar" ).foo( "div.bar", {dog: "bark"} );</code>。
        （有没有感觉到一种“蛋蛋的忧伤”！？）
    </p>
    <p><del>应使用与上下文结合，以确定准确的查询使用。</del></p>
    <p><del><code>.live()</code>方法绑定事件处理器使用此属性来确定根元素使用其事件委派的需要。插件能执行类似的任务也可以找到有用的属性。 此属性包含一个字符串，表示匹配的元素,如果在对象上已调用DOM遍历方法，这个字符串可能不是一个有效的jQuery选择器的表达。出于这个原因，<code>.selector</code>值一般最有用的是紧随原始创作对象。因此， <code>.live()</code>方法只应该在这个方案中使用。</del> </p>
  </div>
</div></article>  </div><!-- .entry-content -->
</article>        
</div>
  </div>
