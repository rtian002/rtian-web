<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>deferred.fail() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main"><article id="post-119" class="post-119 post type-post status-publish format-standard hentry category-deferred-object category-15">
  <header class="entry-header">
    <h1 class="entry-title">deferred.fail()</h1>
    <hr>
<div class="entry-meta">
      分类: <span class="category">
<a href="deferred-object.htm"  title="View all posts in Deferred Object">延迟对象</a></span>   </div><!-- .entry-meta -->
      </header><!-- .entry-header -->
  <div class="entry-content">
    <article id="deferred-fail1" class="entry method"><h2 class="section-title">
<span class="name">deferred.fail( failCallbacks [, failCallbacks ] )</span><span class="returns">返回: 
<a href="Types.htm#Deferred" >Deferred</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong> 当Deferred（延迟）对象拒绝时，调用添加的处理程序。 </p>
<ul class="signatures"><li class="signature" id="deferred-fail-failCallbacks-failCallbacks">
<h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.5.htm" >1.5</a></span>deferred.fail( failCallbacks [, failCallbacks ] )</h4>
<ul>
<li>
<div><strong>failCallbacks</strong></div>
<div>类型: 
<a href="Types.htm#Function" >Function</a>()</div>
<div>一个函数，或者函数数组，当Deferred（延迟）对象拒绝时被调用。</div>
</li>
<li>
<div><strong>failCallbacks</strong></div>
<div>类型: 
<a href="Types.htm#Function" >Function</a>()</div>
<div>
        可选的 一个函数，或者函数数组，当Deferred（延迟）对象拒绝时被调用。
      </div>
</li>
</ul>
</li></ul>
<div class="longdesc" id="entry-longdesc">
    <p><code>deferred.fail()</code>方法接受一个或多个参数，所有这些都参数可以是一个单一的函数或一个函数数组。当Deferred（延迟）拒绝时，failCallbacks被调用。回调是依照他们添加的顺序执行的。一旦<code>deferred.fail()</code>返回Deferred（延迟）对象，Deferred（延迟）可以链接其它的延迟对象，包括增加<code>deferred.fail()</code>方法。
    当Deferred（延迟）拒绝时，failCallbacks执行使用提供给<code>
<a href="deferred.reject.htm" >deferred.resolve()</a></code>或
<a href="deferred.rejectWith.htm" ><code>deferred.rejectWith()</code></a>方法的参数，依照被添加的顺序调用。有关详细信息，请参阅文件
<a href="deferred-object.htm" >Deferred（延迟）对象</a> 。</p>
  </div>
<div class="jquery-api-top">
</div>
<section class="entry-examples" id="entry-examples"><header><h2 class="underline">例子:</h2></header><div class="entry-example" id="example-0">
<h4>
<span class="desc">一旦
<a href="jQuery.get.htm" ><code>jQuery.get</code></a> 方法返回一个jqXHR对象，这是从一个Deferred（延迟）所得到的，可以附加的成功和失败回调使用<code>deferred.done()</code> and <code>deferred.fail()</code>方法。</span>
</h4>
<div class="syntaxhighlighter javascript ">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code>$.get(<span class="string">"test.php"</span>)</code></div></div><div class="container"><div class="line"><code>  .done(<span class="keyword">function</span>(){ alert(<span class="string">"$.get succeeded"</span>); })</code></div></div><div class="container"><div class="line"><code>  .fail(<span class="keyword">function</span>(){ alert(<span class="string">"$.get failed!"</span>); });</code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
</div></section>
</div></article>  </div><!-- .entry-content -->
</article>        
</div>
  </div>
