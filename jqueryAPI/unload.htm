<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>.unload() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main"><article id="post-579" class="post-579 post type-post status-publish format-standard hentry category-document-loading category-10 category-143">
	<header class="entry-header">
		<h1 class="entry-title">.unload()</h1>
		<hr>
<div class="entry-meta">
			分类: <span class="category">
<a href="events.htm"  title="View all posts in Events">事件</a> &gt; 
<a href="document-loading.htm"  title="View all posts in Document Loading">文档加载</a></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->
	<div class="entry-content">
		<article id="unload1" class="entry method"><h2 class="section-title">
<span class="name">.unload( handler(eventObject) )</span><span class="returns">返回: 
<a href="Types.htm#jQuery" >jQuery</a></span><span class="version-details">过时版本: 
<a href="1.8.htm" >1.8</a>, 删除版本: 
<a href="3.0.htm" >3.0</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong>为 JavaScript 的 "unload" 事件绑定一个处理函数。</p>
    <ul class="signatures">
        <li class="signature">
            <h4 class="name">
                <span class="version-details">添加的版本:  
<a href="1.0.htm" >1.0</a></span>.unload( handler )
            </h4>
            <ul>
                <li>
                    <div><strong>handler</strong></div>
                    <div>类型: 
<a href="Types.htm#Function" >Function</a>( 
<a href="Types.htm#Event" >Event</a> eventObject )
                    </div>
                    <div>每次事件触发时会执行的函数。</div>
                </li>
            </ul>
        </li>
        <li class="signature">
            <h4 class="name">
                <span class="version-details">添加的版本:  
<a href="1.4.3.htm" >1.4.3</a></span>.unload(
                [eventData ], handler )
            </h4>
            <ul>
                <li>
                    <div><strong>eventData</strong></div>
                    <div>类型: 
<a href="Types.htm#Anything" >Anything</a>
                    </div>
                    <div>一个普通对象，它包含的数据键值对映射将被传递给事件处理程序。</div>
                </li>
                <li>
                    <div><strong>handler</strong></div>
                    <div>类型: 
<a href="Types.htm#Function" >Function</a>( 
<a href="Types.htm#Event" >Event</a> eventObject )
                    </div>
                    <div>每次事件触发时会执行的函数。</div>
                </li>
            </ul>
        </li>
    </ul>
<div class="longdesc" id="entry-longdesc">
    <p>这个方法是<code>.bind('unload', handler)</code>的简写。</p>
    <p>当用户离开这个页面时，就会触发<code>window</code>元素上的<code>unload</code>事件。这意味着很多情况会触发这个事件。用户可以点击一个链接，离开页面，或在地址栏输入一个新的URL。前进和后退按钮会触发该事件。关闭浏览器窗口，将导致该事件被触发。即使重新加载页面首先会创建一个<code>unload</code>事件。</p>
    <div class="warning">
       <p><code>unload</code>事件的处理器在浏览器的各个版本中可能有变化的。例如，Firefox的某些版本中会跟着一个链接触发该事件，但当窗口被关闭时不会触发。在实际使用中，应在所有支持的浏览器中进行测试，并且和类似的<code>beforeunload</code>事件对比。</p>
    </div>
    <p>任何 <code>unload</code>事件处理程序必须绑定到 <code>window</code> 对象:</p>
    <div class="syntaxhighlighter javascript nogutter">
    	<table>
    		<tbody>
    			<tr>
    				<td class="gutter">
    						<div class="line n1">1</div>
    						<div class="line n2">2</div>
    						<div class="line n3">3</div>
    				</td>
    				<td class="code">
    					<pre><div class="container"><div class="line"><code>$( window ).unload(<span class="keyword">function</span>() {</code></div></div><div class="container"><div class="line"><code>  <span class="keyword">return</span> <span class="string">"Handler for .unload() called."</span>;</code></div></div><div class="container"><div class="line"><code>});</code></div></div></pre>
    				</td>
    			</tr>
    		</tbody>
    	</table>
    </div>
    <p>这些代码执行后，浏览器离开当前页面时，将显示警报（alert）。不可能用事件对象的<code>.preventDefault()</code>方法取消<code>unload</code>事件。当用户离开该页面，需要使用脚本进行一些清理工作的场合，可以使用该事件。
    </p>
  </div>
    <h3>Additional Notes（其他注意事项）:</h3>
                <div class="longdesc">
                    <ul>
                        <li>
                            <code>.unload()</code>方法只是作为<code>.on( "unload", handler )</code>的一个速记写法，移除该事件可以使用<code>.off(
                            "unload"
                            )</code>。
                        </li>
                    </ul>
                </div>
<div class="jquery-api-top">
</div>
<section class="entry-examples" id="entry-examples"><header><h2 class="underline">例子:</h2></header><div class="entry-example" id="example-0">
<h4><span class="desc">当离开页面时显示一个提示框：</span></h4>
    <div class="syntaxhighlighter javascript ">
    	<table>
    		<tbody>
    			<tr>
    				<td class="gutter">
    						<div class="line n1">1</div>
    						<div class="line n2">2</div>
    						<div class="line n3">3</div>
    				</td>
    				<td class="code">
    					<pre><div class="container"><div class="line"><code>$( window ).unload(<span class="keyword">function</span>() {</code></div></div><div class="container"><div class="line"><code>  <span class="keyword">return</span> <span class="string">"Bye now!"</span>;</code></div></div><div class="container"><div class="line"><code>});</code></div></div></pre>
    				</td>
    			</tr>
    		</tbody>
    	</table>
    </div>
</div></section>
</div></article>	</div><!-- .entry-content -->
</article>        
</div>
  </div>
