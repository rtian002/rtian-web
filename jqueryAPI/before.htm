<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>.before() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
	﻿
<div class="inner" role="main"><article id="post-53" class="post-53 post type-post status-publish format-standard hentry category-dom-insertion-outside category-10 category-14">
  <header class="entry-header">
    <h1 class="entry-title">.before()</h1>
    <hr>
<div class="entry-meta">
      分类: <span class="category">
<a href="manipulation.htm"  title="View all posts in Manipulation">操作</a> &gt; 
<a href="dom-insertion-outside.htm"  title="View all posts in DOM Insertion, Outside">DOM 插入现有元素外</a></span>    </div><!-- .entry-meta -->
      </header><!-- .entry-header -->
  <div class="entry-content">
    <article id="before1" class="entry method"><h2 class="section-title">
<span class="name">.before( content [, content ] )</span><span class="returns">返回: 
<a href="Types.htm#jQuery" >jQuery</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong>根据参数设定，在匹配元素的前面插入内容（译者注：外部插入）</p>
<ul class="signatures">
    <li class="signature">
        <h4 class="name">
            <span class="version-details">添加的版本: 
<a href="1.0.htm" >1.0</a></span>.before(
            content [, content ] )
        </h4>
        <ul>
            <li>
                <div><strong>content</strong></div>
                <div>类型: 
<a href="Types.htm#htmlString" >htmlString</a> 或 
<a href="Types.htm#Element" >Element</a> 或 
<a href="Types.htm#Array" >Array</a> 或 
<a href="Types.htm#jQuery" >jQuery</a>
                </div>
                <div>HTML字符串，DOM 元素，文本节点，元素和文本节点的数组，或者jQuery对象，用来插入到集合中每个匹配元素的前面。
                </div>
            </li>
            <li>
                <div><strong>content</strong></div>
                <div>类型: 
<a href="Types.htm#htmlString" >htmlString</a> 或 
<a href="Types.htm#Element" >Element</a> 或 
<a href="Types.htm#Array" >Array</a> 或 
<a href="Types.htm#jQuery" >jQuery</a>
                </div>
                <div>一个或多个附加的DOM元素，文本节点，元素和文本节点的数组，HTML字符串，或jQuery对象，用来插入到集合中每个匹配元素的前面。
                </div>
            </li>
        </ul>
    </li>
    <li class="signature">
        <h4 class="name">
            <span class="version-details">添加的版本: 
<a href="1.4.htm" >1.4</a></span>.before( function )
        </h4>
        <ul>
            <li>
                <div><strong>function</strong></div>
                <div>类型: 
<a href="Types.htm#Function" >Function</a>( 
<a href="Types.htm#Integer" >Integer</a> index )
                    =&gt;
<a href="Types.htm#htmlString" >htmlString</a> 或 
<a href="Types.htm#Element" >Element</a> 或 
<a href="Types.htm#jQuery" >jQuery</a>
                </div>
                <div>一个返回HTML字符串，DOM元素（或多个），文本节点（或多个），或jQuery对象的函数，返回的内容用来插入到集合中每个匹配元素的前面。   接收元素集合中该元素的索引位置作为一个参数（index 参数）。在函数中<code>this</code>指向元素集合中的当前元素。
                </div>
            </li>
        </ul>
    </li>
    <li class="signature">
        <h4 class="name">
        <span class="version-details">添加的版本: 
<a href="">1.10</a></span><a id="before-function-html" href="#before-function-html"><span class="icon-link"></span>.before( function-html )</a>
        </h4>
        <ul>
            <li>
                <div><strong>function</strong></div>
                <div>类型: 
<a href="Types.htm#Function" >Function</a>( 
<a href="Types.htm#Integer" >Integer</a> index, 
<a href="Types.htm#String" >String</a> html )
                    =&gt;
<a href="Types.htm#htmlString" >htmlString</a> 或 
<a href="Types.htm#Element" >Element</a> 或 
<a href="Types.htm#jQuery" >jQuery</a>
                </div>
                <div>一个返回HTML字符串，DOM元素（或多个），文本节点（或多个），jQuery对象的函数，返回的内容用来插入到集合中每个匹配元素的前面。接收元素集合中该元素的索引位置（index 参数）和元素的原来HTML值（html 参数）作为参数。在函数中<code>this</code>指向元素集合中的当前元素。
                </div>
            </li>
        </ul>
    </li>
</ul>
<div class="longdesc" id="entry-longdesc">
    <p><code>.before()</code> 和
<a href="insertBefore.htm" >.insertBefore()</a>实现同样的功能。主要的不同是语法——内容和目标的位置不同。
        对于<code>.before()</code>,要插入的内容来自方法的参数：<code>$(target).before(contentToBeInserted)</code>
        （即，选择器表达式在方法的前面，参数是将要插入的内容）  。
        对于<code>.insertBefore()</code>，
        刚好相反，内容在方法前面并且插入到目标的前面，
        而目标是传递给<code>.insertBefore()</code>方法的参数： <code>$(contentToBeInserted).insertBefore(target)</code>。</p>
    <p>请看下面的HTML:</p>
    <div class="syntaxhighlighter xml nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"container"</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Greetings<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"inner"</span>&gt;</span>Hello<span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"inner"</span>&gt;</span>Goodbye<span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>你可以创建内容然后同时插入到多个元素前面：</p>
    <div class="syntaxhighlighter javascript nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code>$(<span class="string">'.inner'</span>).before(<span class="string">'&lt;p&gt;Test&lt;/p&gt;'</span>);</code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>
    每个新的inner <code>&lt;div&gt;</code>元素会得到新的内容：</p>
    <div class="syntaxhighlighter xml nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
            <div class="line n6">6</div>
            <div class="line n7">7</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"container"</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Greetings<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">p</span>&gt;</span>Test<span class="tag">&lt;/<span class="title">p</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"inner"</span>&gt;</span>Hello<span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">p</span>&gt;</span>Test<span class="tag">&lt;/<span class="title">p</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"inner"</span>&gt;</span>Goodbye<span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>你也可以在页面上选择一个元素然后插在另一个元素前面：</p>
    <div class="syntaxhighlighter javascript nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code>$(<span class="string">'.container'</span>).before($(<span class="string">'h2'</span>));</code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>如果这样，一个被选中的元素插入被到DOM中的一个别的位置，
    它将移动到目标的前面（而不是克隆）：</p>
    <div class="syntaxhighlighter xml nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">h2</span>&gt;</span>Greetings<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"container"</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"inner"</span>&gt;</span>Hello<span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"inner"</span>&gt;</span>Goodbye<span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">div</span>&gt;</span></code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>
        <strong> 重要提示：</strong>
        如果有多个目标元素，将要为每个目标元素创建插入元素的克隆副本，除了最后一个。
        然而，对于除了最后一个每个目标将要创建的插入元件的克隆副本。</p>
    <del><p>在jQuery 1.4中, <code>.before()</code>和<code>.after()</code>同样对脱离文档的DOM节点（脱离文档的DOM节点，即，可能时javascript动态创建的，还没被插入到html文档中）有效：
</p>
    <div class="syntaxhighlighter javascript nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code>$(<span class="string">"&lt;div/&gt;"</span>).before(<span class="string">"&lt;p&gt;&lt;/p&gt;"</span>);</code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>结果是一个jQuery集合包含一个段落和一个 div（按此顺序）。</p>  </del>
    <h4 id="additional-arguments">Additional Arguments（额外的参数）</h4>
    <p>
      类似的其他内容的添加方法 &nbsp;如<code>
<a href="prepend.htm" >.prepend()</a></code> 和 <code>
<a href="after.htm" >.after()</a></code> ,<code>.before()</code>还支持传递输入多个参数。支持的输入包括DOM元素，jQuery对象，HTML字符串，DOM元素的数组。</p>
    <p>例如，下面将插入两个新的&lt;div&gt;和现有的&lt;div&gt;到 第一个段落：</p>
    <div class="syntaxhighlighter javascript nogutter">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="keyword">var</span> $newdiv1 = $(<span class="string">"&lt;div id='object1'&gt;&lt;/div&gt;"</span>),</code></div></div><div class="container"><div class="line"><code>    newdiv2 = document.createElement(<span class="string">'div'</span>),</code></div></div><div class="container"><div class="line"><code>    existingdiv1 = document.getElementById(<span class="string">'foo'</span>);</code></div></div><div class="container"><div class="line"><code> </code></div></div><div class="container"><div class="line"><code>$(<span class="string">'p'</span>).first().before($newdiv1, [newdiv2, existingdiv1]);</code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
    <p>
<code>.before()</code> 可以接受任何数量的额外的参数，所以上面的例子中，也可以将三个独立的 &lt;div&gt; 分别作为参数传给该方法，就像这样<code>$('p').first().before($newdiv1, newdiv2, existingdiv1)</code>。参数的类型和数量
将在很大程度上取决于在代码中被收集的元素。
      </p>
  </div>
<h3>其他注意事项:</h3>
<div class="longdesc">
    <ul>
        <li>在此之前的jQuery1.9，  如果该集合中的第一个节点没有在文档中，
            <code>.before()</code>将尝试添加 或 在当前的jQuery集合改变节点，在这种情况下返回一个新的jQuery集合，而不是原来的集合。
        该方法可能会或可能不会返回一个新的结果，这取决于它的参数个数或参数的连贯性！
        从jQuery1.9开始，<code>.after()</code>, <code>.before()</code>,
                    和 <code>.replaceWith()</code>总是返回原始未修改的集合。
            试图在一个没有父级元素的节点上使用这些方法是没有效果的，也就是说，集合和它包含的节点都不会改变。
        </li>
        <li> 设计上，任何jQuery的构造或方法，都接受一个HTML字符串（作为参数） - 
<a href="jQuery.htm" >jQuery()</a>,
<a href="append.htm" >.append()</a>, 
<a href="after.htm" >.after()</a>等 -
                可以潜在地执行代码。   这可能会出现注入script标签或使用HTML属性
                 执行的代码（例如，<code>&lt;img
                            onload=""&gt;</code>）。
                不要使用这些方法来插入来自不受信任的来源，如网址查询参数，Cookie或表单输入获得的字符串。
            这样做可能会引起跨站点脚本（XSS）漏洞。
                将内容添加到文档之前删除或避开用户任何输入内容。
                </li>
    </ul>
</div>
<div class="jquery-api-top">
</div>
<section class="entry-examples" id="entry-examples"><header><h2 class="underline">例子:</h2></header><div class="entry-example" id="example-0">
<h4>Example: <span class="desc">在所有段落前插入一些HTML。</span>
</h4>
<div class="syntaxhighlighter xml ">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
            <div class="line n6">6</div>
            <div class="line n7">7</div>
            <div class="line n8">8</div>
            <div class="line n9">9</div>
            <div class="line n10">10</div>
            <div class="line n11">11</div>
            <div class="line n12">12</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="doctype">&lt;!DOCTYPE html&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">html</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">head</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"><span class="tag">p</span> <span class="rules">{ <span class="rule"><span class="attribute">background</span>:<span class="value">yellow;</span></span> <span class="rule">}</span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://code.jquery.com/jquery-latest.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">head</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">body</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">p</span>&gt;</span> is what I said...<span class="tag">&lt;/<span class="title">p</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">$(<span class="string">"p"</span>).before(<span class="string">"&lt;b&gt;Hello&lt;/b&gt;"</span>);</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></code></div></div><div class="container"><div class="line"><code> </code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">body</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">html</span>&gt;</span></code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
<h4>Demo:</h4>
<div class="demo code-demo"></div>
</div>
<div class="entry-example" id="example-1">
<h4>Example: <span class="desc">在所有段落前插入一个DOM元素。</span>
</h4>
<div class="syntaxhighlighter xml ">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
            <div class="line n6">6</div>
            <div class="line n7">7</div>
            <div class="line n8">8</div>
            <div class="line n9">9</div>
            <div class="line n10">10</div>
            <div class="line n11">11</div>
            <div class="line n12">12</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="doctype">&lt;!DOCTYPE html&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">html</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">head</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"><span class="tag">p</span> <span class="rules">{ <span class="rule"><span class="attribute">background</span>:<span class="value">yellow;</span></span> <span class="rule">}</span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://code.jquery.com/jquery-latest.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">head</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">body</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">p</span>&gt;</span> is what I said...<span class="tag">&lt;/<span class="title">p</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">$(<span class="string">"p"</span>).before( document.createTextNode(<span class="string">"Hello"</span>) );</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></code></div></div><div class="container"><div class="line"><code> </code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">body</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">html</span>&gt;</span></code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
<h4>Demo:</h4>
<div class="demo code-demo"></div>
</div>
<div class="entry-example" id="example-2">
<h4>Example: <span class="desc">在所有段落前插入一个jQuery对象（类似于一个DOM元素数组）。</span>
</h4>
<div class="syntaxhighlighter xml ">
  <table>
    <tbody>
      <tr>
        <td class="gutter">
            <div class="line n1">1</div>
            <div class="line n2">2</div>
            <div class="line n3">3</div>
            <div class="line n4">4</div>
            <div class="line n5">5</div>
            <div class="line n6">6</div>
            <div class="line n7">7</div>
            <div class="line n8">8</div>
            <div class="line n9">9</div>
            <div class="line n10">10</div>
            <div class="line n11">11</div>
            <div class="line n12">12</div>
        </td>
        <td class="code">
          <pre><div class="container"><div class="line"><code><span class="doctype">&lt;!DOCTYPE html&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">html</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">head</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"><span class="tag">p</span> <span class="rules">{ <span class="rule"><span class="attribute">background</span>:<span class="value">yellow;</span></span> <span class="rule">}</span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://code.jquery.com/jquery-latest.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">head</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">body</span>&gt;</span></code></div></div><div class="container"><div class="line"><code>  <span class="tag">&lt;<span class="title">p</span>&gt;</span> is what I said...<span class="tag">&lt;/<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">b</span>&gt;</span>Hello<span class="tag">&lt;/<span class="title">b</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">$(<span class="string">"p"</span>).before( $(<span class="string">"b"</span>) );</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></code></div></div><div class="container"><div class="line"><code> </code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">body</span>&gt;</span></code></div></div><div class="container"><div class="line"><code><span class="tag">&lt;/<span class="title">html</span>&gt;</span></code></div></div></pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
<h4>Demo:</h4>
<div class="demo code-demo"></div>
</div></section>
</div></article>  </div><!-- .entry-content -->
</article>        
</div>
  </div>
