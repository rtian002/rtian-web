<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>deferred.state() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main"><article id="post-143" class="post-143 post type-post status-publish format-standard hentry category-deferred-object category-17">
  <header class="entry-header">
    <h1 class="entry-title">deferred.state()</h1>
    <hr>
<div class="entry-meta">
      分类: <span class="category">
<a href="deferred-object.htm"  title="View all posts in Deferred Object">延迟对象</a></span>   </div><!-- .entry-meta -->
      </header><!-- .entry-header -->
  <div class="entry-content">
    <article id="deferred-state1" class="entry method"><h2 class="section-title">
<span class="name">deferred.state()</span><span class="returns">返回: 
<a href="Types.htm#String" >String</a></span>
</h2>
<div class="entry-wrapper">
<p class="desc"><strong>描述: </strong>确定一个Deferred（延迟）对象的当前状态。 </p>
<ul class="signatures"><li class="signature" id="deferred-state">
<h4 class="name">
<span class="version-details">添加的版本: 
<a href="1.7.htm" >1.7</a></span>deferred.state()</h4>
<ul><li><div class="null-signature">这个方法不接受任何参数</div></li></ul>
</li></ul>
<div class="longdesc" id="entry-longdesc">
    <p>deferred.state() 方法返回一个字符串，代表Deferred（延迟）对象的当前状态。Deferred对象可以在三种状态之一：</p>
    <ul>
      <ul>
      <li>
<strong>"pending"</strong>: Deferred对象是尚未完成状态 (不是 "rejected" 或 "resolved").</li>
      <li>
<strong>"resolved"</strong>: Deferred对象是在解决状态，这意味着，
<a href="deferred.resolve.htm" ><code>deferred.resolve()</code></a> 或者 
<a href="deferred.resolveWith.htm" ><code>deferred.resolveWith()</code></a>被对象访问和doneCallbacks被访问（或在被调用的过程中） 。 </li>
      <li>
<strong>"rejected"</strong>: Deferred对象是在被拒绝的状态，这意味着，
<a href="deferred.reject.htm" ><code>deferred.reject()</code></a> 或者 
<a href="deferred.rejectWith.htm" ><code>deferred.rejectWith()</code></a> 被对象访问和failCallbacks被访问（或在被调用的过程中） 。</li>
    </ul>
    <p>这种方法主要是有用的调试，例如，在准备拒绝（reject）一个延迟对象前，判断它是否已经处于 resolved 状态。</p>
  </ul></div>
</div></article>  </div><!-- .entry-content -->
</article>        
</div>
  </div>
