<script src="js/rtian.js" ></script>
<meta charset="utf-8" />
<title>deferred.progress() | jQuery API中文文档(适用jQuery 1.0 - jQuery 3.0)</title>
  <div id="content" >
<div class="inner" role="main">
    <article id="post-131" class="post-131 post type-post status-publish format-standard hentry category-deferred-object category-17">
        <header class="entry-header">
            <h1 class="entry-title">deferred.progress()</h1>
            <hr>
            <div class="entry-meta">
                分类: <span class="category">
<a href="deferred-object.htm" >Deferred
                Object</a></span></div>
            <!-- .entry-meta -->
        </header>
        <!-- .entry-header -->
        <div class="entry-content">
            <article id="deferred-progress1" class="entry method"><h2 class="section-title">
                <span class="name">deferred.progress( progressCallbacks, progressCallbacks )</span><span class="returns">返回: 
<a href="Types.htm#Deferred" >Deferred</a></span>
            </h2>
                <div class="entry-wrapper">
                    <p class="desc"><strong>描述: </strong> 当Deferred（延迟）对象生成正在执行中的进度通知时，调用添加处理程序。</p>
                    <ul class="signatures">
                        <li class="signature">
                            <h4 class="name">
                                <span class="version-details">添加的版本: 
<a href="1.7.htm" >1.7</a></span>deferred.progress( progressCallbacks, progressCallbacks
                                )
                            </h4>
                            <ul>
                                <li>
                                    <div><strong>progressCallbacks</strong></div>
                                    <div>Type: 
<a href="Types.htm#Function" >Function</a>()
                                        or 
<a href="Types.htm#Array" >Array</a>
                                    </div>
                                    <div>
                                        一个函数，或者函数数组，当Deferred（延迟）对象生成正在执行中的进度通知时被调用。
                                    </div>
                                </li>
                                <li>
                                    <div><strong>progressCallbacks</strong></div>
                                    <div>Type: 
<a href="Types.htm#Function" >Function</a>()
                                        or 
<a href="Types.htm#Array" >Array</a>
                                    </div>
                                    <div>
                                        可选附加的函数(多个)，或者(多个)函数数组，当Deferred（延迟）对象生成正在执行中的进度通知时被调用。
                                    </div>
                                </li>
                            </ul>
                        </li>
                    </ul>
                    <div class="longdesc" id="entry-longdesc">
                        <p><code>deferred.progress()</code>方法接受一个或多个参数，所有参数都可以是一个单一的函数或函数数组。  当通过调用 <code>notify</code>或<code>notifyWith</code>使延迟对象产生正在执行中的进度通知时，<code>progressCallbacks</code> 就会被调用 。由于 <code>deferred.progress()</code>返回的是Deferred （延迟）对象，所以其它Deferred （延迟）对象方法可以链接到该对象上（链式调用）。当Deferred （延迟）对象被 resolved（解决） 或 rejected（拒绝） 时，进度回调函数将不再被调用， 除非  Deferred （延迟）进入resolved（解决） 或 rejected（拒绝）状态后，添加任何的<code>progressCallbacks</code>将立即执行，使用的参数被传递给<code>.notify()</code> 或 <code>notifyWith()</code>调用。 欲了解更多信息，请参阅文档
<a href="deferred-object.htm" >延迟对象</a>。</p>
                    </div>
                </div>
            </article>
        </div>
        <!-- .entry-content -->
    </article>
</div>
  </div>
